@base <https://periodo.github.io/edtf-literals/> .

@prefix : <cases/level-2/one-of-set-2.ttl#> .
@prefix edtfo: <edtfo.ttl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<> a owl:Ontology ;
  owl:imports <edtfo.ttl>
  .

:when a time:Instant ;
  # December 3, 1760; or some earlier date.
  # Elements immediately preceeding and/or following as well as the elements
  # represented by a double-dot, all have the same precision.
  edtfo:inEDTFDateTime "[..1760-12-03]" ;
  a :PossibleTime
  .

:PossibleTime a owl:Class ;
  rdfs:subClassOf time:Instant ;
  # either in December 3 1760, or in some earlier day
  owl:disjointUnionOf (
    :TimeIn1760_12_03
    :TimeInSomeDayBefore1760_12_03
    ) ;
  # not in more than one earlier day
  rdfs:subClassOf [
    a owl:Restriction ;
    owl:maxQualifiedCardinality 1 ;
    owl:onProperty time:inDateTime ;
    owl:onClass :SomeDayBefore1760_12_03
    ]
  .

# # If the set of possible times is closed, include the following axiom.
# [
#     a owl:Restriction ;
#     owl:onProperty [ owl:inverseOf time:inDateTime ] ;
#     owl:hasValue :when
# ]
# owl:equivalentClass
# [
#     a owl:Class ;
#     owl:unionOf (
#       :1760_12_03
#       :SomeDayBefore1760_12_03
#       )
# ]
# .

:TimeIn1760_12_03 a owl:Class ;
  rdfs:subClassOf time:Instant ;
  owl:equivalentClass [
    a owl:Restriction ;
    owl:onProperty time:inDateTime ;
    owl:someValuesFrom :1760_12_03
    ]
  .

:TimeInSomeDayBefore1760_12_03 a owl:Class ;
  rdfs:subClassOf time:Instant ;
  owl:unionOf (
    [ a owl:Restriction ;
      owl:onProperty time:inDateTime ;
      owl:someValuesFrom :SomeDayBefore1760_12_03
      ]
    [ a owl:Restriction ;
      owl:onProperty time:before ;
      owl:someValuesFrom :TimeIn1760_12_03
      ]
    )
  .

:DayPrecisionDescription a owl:Class ;
  owl:intersectionOf (
    time:DateTimeDescription
    [ a owl:Restriction ;
      owl:onProperty time:unitType ;
      owl:hasValue time:unitDay
      ]
    )
  .

:1760_12_03 a owl:Class ;
  owl:intersectionOf (
    :DayPrecisionDescription
    [ a owl:Restriction ;
      owl:onProperty time:year ;
      owl:hasValue 1760
      ]
    [ a owl:Restriction ;
      owl:onProperty time:month ;
      owl:hasValue 12
      ]
    [ a owl:Restriction ;
      owl:onProperty time:day ;
      owl:hasValue 3
      ]
    )
  .

:SomeDayBefore1760_12_03 a owl:Class ;
  owl:intersectionOf (
    :DayPrecisionDescription
    [ owl:unionOf (
        # year before 1760
        [ a owl:Restriction ;
          owl:onProperty time:year ;
          owl:someValuesFrom [
            a rdfs:Datatype ;
            owl:onDatatype xsd:integer ;
            owl:withRestrictions ([ xsd:maxExclusive 1760 ])
            ]
          ]
        # 1760, month before 12
        [ a owl:Class ;
          owl:intersectionOf (
            [ a owl:Restriction ;
              owl:onProperty time:year ;
              owl:hasValue 1760
              ]
            [ a owl:Restriction ;
              owl:onProperty time:month ;
              owl:someValuesFrom [
                a rdfs:Datatype ;
                owl:onDatatype xsd:integer ;
                owl:withRestrictions ([ xsd:maxExclusive 12 ])
                ]
              ]
            )
          ]
        # 1760-12, day before 03
        [ a owl:Class ;
          owl:intersectionOf (
            [ a owl:Restriction ;
              owl:onProperty time:year ;
              owl:hasValue 1760
              ]
            [ a owl:Restriction ;
              owl:onProperty time:month ;
              owl:hasValue 12
              ]
            [ a owl:Restriction ;
              owl:onProperty time:day ;
              owl:someValuesFrom [
                a rdfs:Datatype ;
                owl:onDatatype xsd:integer ;
                owl:withRestrictions ([ xsd:maxExclusive 3 ])
                ]
              ]
            )
          ]
        )
      ]
    )
  .
