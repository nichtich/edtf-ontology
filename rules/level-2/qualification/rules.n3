@base <https://periodo.github.io/edtf-ontology/> .
@prefix bipm: <http://www.opengis.net/def/trs/BIPM/0/> .
@prefix edtfo: <edtfo.ttl#> .
@prefix iso8601: <http://www.opengis.net/def/uom/ISO-8601/0/> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix re: <rules/regexes/> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# year and month qualified

{
    re:YEAR = ?y . re:MONTH = ?m . re:DAY = ?d . re:QUALIFIER = ?q

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y "-" ?m ?q "-(" ?d ")$") string:concatenation ?d_scraper
    . (?e ?d_scraper) string:scrape ?d_string
    . ("---" ?d_string) string:concatenation ?d_value
    . (?d_value xsd:gDay) log:dtlit ?gday
} => {
    ?w time:inDateTime [
      a time:DateTimeDescription ;
      time:unitType time:unitDay ;
      time:day ?gday
    ]
} .

{
    re:YEAR = ?y . re:MONTH = ?m . re:DAY = ?d

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y "-" ?m "\\?-" ?d "$") string:concatenation ?re
    . ?e string:matches ?re
    . ?w time:inDateTime ?dtd
    . ?dtd time:year ?gyear
    . ?dtd time:month ?gmonth
} => {
    << ?dtd time:year ?gyear >> a edtfo:UncertainStatement .
    << ?dtd time:month ?gmonth>> a edtfo:UncertainStatement
} .

{
    re:YEAR = ?y . re:MONTH = ?m . re:DAY = ?d

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y "-" ?m "~-" ?d "$") string:concatenation ?re
    . ?e string:matches ?re
    . ?w time:inDateTime ?dtd
    . ?dtd time:year ?gyear
    . ?dtd time:month ?gmonth
} => {
    << ?dtd time:year ?gyear >> a edtfo:ApproximateStatement .
    << ?dtd time:month ?gmonth>> a edtfo:ApproximateStatement
} .

{
    re:YEAR = ?y . re:MONTH = ?m . re:DAY = ?d

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y "-" ?m "%-" ?d "$") string:concatenation ?re
    . ?e string:matches ?re
    . ?w time:inDateTime ?dtd
    . ?dtd time:year ?gyear
    . ?dtd time:month ?gmonth
} => {
    << ?dtd time:year ?gyear >> a edtfo:UncertainStatement , edtfo:ApproximateStatement .
    << ?dtd time:month ?gmonth>> a edtfo:UncertainStatement , edtfo:ApproximateStatement
} .

# year qualified

{
    re:YEAR = ?y . re:MONTH = ?m . re:DAY = ?d . re:QUALIFIER = ?q

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y ?q "-" ?m "-(" ?d ")$") string:concatenation ?d_scraper
    . (?e ?d_scraper) string:scrape ?d_string
    . ("---" ?d_string) string:concatenation ?d_value
    . (?d_value xsd:gDay) log:dtlit ?gday
} => {
    ?w time:inDateTime [
      a time:DateTimeDescription ;
      time:unitType time:unitDay ;
      time:day ?gday
    ]
} .

{
    re:YEAR = ?y . re:MONTH = ?m . re:QUALIFIER = ?q

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y ?q "-" ?m "$") string:concatenation ?re
    . ?e string:matches ?re
} => {
    ?w time:inDateTime [
      a time:DateTimeDescription ;
      time:unitType time:unitMonth ;
    ]
} .

{
    re:YEAR = ?y . re:MONTH = ?m . re:QUALIFIER = ?q

    . ?w edtfo:inEDTFDateTime ?e
    . ?w time:inDateTime ?dtd
    . ("^" ?y ?q "-(" ?m ")") string:concatenation ?m_scraper
    . (?e ?m_scraper) string:scrape ?m_string
    . ("--" ?m_string) string:concatenation ?m_value
    . (?m_value xsd:gMonth) log:dtlit ?gmonth
} => {
    ?dtd time:month ?gmonth
} .

{
    re:YEAR = ?y . re:MONTH = ?m . re:DAY = ?d

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y "\\?-" ?m) string:concatenation ?re
    . ?e string:matches ?re
    . ?w time:inDateTime ?dtd
    . ?dtd time:year ?gyear
} => {
    << ?dtd time:year ?gyear >> a edtfo:UncertainStatement
} .

{
    re:YEAR = ?y . re:MONTH = ?m . re:DAY = ?d

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y "~-" ?m) string:concatenation ?re
    . ?e string:matches ?re
    . ?w time:inDateTime ?dtd
    . ?dtd time:year ?gyear
} => {
    << ?dtd time:year ?gyear >> a edtfo:ApproximateStatement
} .

{
    re:YEAR = ?y . re:MONTH = ?m . re:DAY = ?d

    . ?w edtfo:inEDTFDateTime ?e
    . ("^" ?y "%-" ?m) string:concatenation ?re
    . ?e string:matches ?re
    . ?w time:inDateTime ?dtd
    . ?dtd time:year ?gyear
} => {
    << ?dtd time:year ?gyear >> a edtfo:UncertainStatement , edtfo:ApproximateStatement
} .
